<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>otp-standalone</artifactId>
  <packaging>jar</packaging>
  <name>OpenTripPlanner Standalone</name>

  <parent>
    <groupId>org.opentripplanner</groupId>
    <artifactId>opentripplanner</artifactId>
    <version>0.9.2-SNAPSHOT</version>
  </parent>

  <dependencies>
    <!-- OTP Modules -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>otp-rest-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- JAVA STANDARD LIBRARY EXTENSIONS -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>net.lingala.zip4j</groupId>
      <artifactId>zip4j</artifactId>
      <version>1.3.1</version>
    </dependency>
    <!-- Logging -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>
    <!-- JERSEY/GRIZZLY INTEGRATION -->
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-grizzly2</artifactId>
    </dependency>
    <!-- TESTING DEPENDENCIES -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Copy the client WAR into the right place for inclusion in the 
        standalone JAR, so it can be served up. We want to copy the compressed WAR 
        file rather than list it as a dependency and have the shade plugin explode 
        it. Note that the client WAR is not listed as a dependency. Hopefully the fact
        that it is referenced by the copy goal forces proper reactor ordering. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>copy-client-war</id>
            <!-- Bind to the phase just before package, which prepares the 
              unpacked package. This doesn't work from within the package phase itself. -->
            <phase>prepare-package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>opentripplanner-leaflet-client</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <!-- Per-artifact directory / filename setting (also possible globally). -->
                  <!-- Mix the WAR in with the JAR contents, in classes/ --> 
                  <outputDirectory>${project.build.directory}/classes</outputDirectory> -->
                  <destFileName>client.war</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- There used to be a dependency-plugin:copy-dependencies here, but I discovered that the
        shade-plugin will explode the dependencies even if they aren't manually copied in. -->

      <!-- We use the shade plugin instead of the standard assembly plugin 
        because the standard plugin is dumb (it blindly overwrites files when creating 
        the combined META-INF directory for the new jar, causing runtime errors because, 
        e.g., a file in META-INF/services has been clobbered. NB: Don't use a version 
        older than 1.3.2, as it fixed MSHADE-76 (files not merged properly if some 
        input files are missing a terminating newline) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <finalName>otp</finalName>
              <!-- <minimizeJar>true</minimizeJar> remove unused class files (this seems to remove too much for now) -->
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>org.opentripplanner.standalone.OTPMain</Main-Class>
                    <Specification-Title>Java Advanced Imaging Image I/O
                      Tools</Specification-Title>
                    <Specification-Version>1.1</Specification-Version>
                    <Specification-Vendor>Sun Microsystems, Inc.</Specification-Vendor>
                    <Implementation-Title>com.sun.media.imageio</Implementation-Title>
                    <Implementation-Version>1.1</Implementation-Version>
                    <Implementation-Vendor>Sun Microsystems, Inc.</Implementation-Vendor>
                    <Extension-Name>com.sun.media.imageio</Extension-Name>
                  </manifestEntries>
                </transformer>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
